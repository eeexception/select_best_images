name: Python Application and Binary Build with Release Upload

on:
  push:
    branches: [ "main" ]
    tags: # Automatically create a release for any tag push
      - '*'

permissions:
  contents: write  # Required to create a release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build Linux binary
      run: |
        pyinstaller --onefile select_best_images.py
        mkdir -p dist/linux
        mv dist/select_best_images dist/linux/

    - name: Set up Docker for Windows cross-compilation
      uses: docker/setup-qemu-action@v2
      with:
        platforms: all

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cross-compile Windows binary
      uses: docker/build-push-action@v3
      with:
        context: .
        platforms: windows/amd64
        outputs: type=local,dest=dist/windows
        dockerfile: Dockerfile.crosscompile

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Linux binary to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/linux/select_best_images
        asset_name: select_best_images_linux
        asset_content_type: application/octet-stream

    - name: Upload Windows binary to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/windows/select_best_images.exe
        asset_name: select_best_images_windows.exe
        asset_content_type: application/octet-stream
